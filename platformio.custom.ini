[custom]
build_flags = 
  ${KNX_TP.build_flags}
	;-D OPENKNX_DUALCORE
  ;-D DALI_NO_TIMER
  -D DALI_NO_EXPORT
  -D OPENKNX_HEARTBEAT_PRIO
  ;-D DALI_NO_COLLISSION_CHECK
  ;-D USE_KNX_DMA_UART=0 ; or 1 // uart0 oder uart1
  ;-D USE_KNX_DMA_IRQ=1 ; or 1 // abh√§ngig von bereits verwendeten irqs
;debug_build_flags =

[env:ESP_develop_REG1_USB_V1]
extends = ESP32_UPLOAD_USB, ESP32_develop, custom
build_flags =
  -D SERIAL_DEBUG=Serial
  -D OKNXHW_REG1_BASE_V1
   ${RP2040_develop.build_flags}
   ${custom.build_flags}

[env:develop_REG1_JLINK_V1]
extends = UPLOAD_JLINK, RP2040_develop, RP2040_2MB, custom
build_flags =
  ;-D OPENKNX_RTT
  ;-D BUFFER_SIZE_UP=10240
  -D SERIAL_DEBUG=Serial
  -D OKNXHW_REG1_BASE_V1
   ${RP2040_develop.build_flags}
   ${custom.build_flags}

[env:develop_REG1_USB_V1]
extends = RP2040_UPLOAD_USB, RP2040_develop, RP2040_16MB, custom
build_flags =
  -D SERIAL_DEBUG=Serial
  -D OKNXHW_REG1_BASE_V1
   ${RP2040_develop.build_flags}
   ${custom.build_flags}

[env:develop_REG1_JLINK_V0]
extends = UPLOAD_JLINK, RP2040_develop, RP2040_2MB, custom
build_flags =
  -D OPENKNX_RTT
  -D BUFFER_SIZE_UP=10240
  -D OKNXHW_REG1_BASE_V0
   ${RP2040_develop.build_flags}
   ${custom.build_flags}

[env:develop_REG1_USB_V0]
extends = RP2040_UPLOAD_USB, RP2040_develop, RP2040_16MB, custom
build_flags =
  -D SERIAL_DEBUG=Serial
  -D OKNXHW_REG1_BASE_V0
   ${RP2040_develop.build_flags}
   ${custom.build_flags}

[env:release_REG1_V1]
extends = RP2040_releases, custom, RP2040_UPLOAD_USB
build_flags =
  -D OKNXHW_REG1_BASE_V1
  -D SERIAL_DEBUG=Serial
   ${RP2040_releases.build_flags}
   ${custom.build_flags}